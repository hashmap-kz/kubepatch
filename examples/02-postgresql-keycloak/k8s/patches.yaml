postgresql:
  secret/postgresql:
    - op: replace
      path: /stringData
      value:
        POSTGRES_USER: "${DB_USER}"
        POSTGRES_PASSWORD: "${DB_PASSWORD}"
  statefulset/postgresql:
    - op: add
      path: /spec/template/spec/containers/0/env
      value:
        - name: TZ
          value: Asia/Aqtau
        - name: POSTGRES_INITDB_ARGS
          value: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
  service/postgresql:
    - op: add
      path: /spec/ports/0/nodePort
      value: 30267
  configmap/postgresql-conf-placeholder:
    - op: replace
      path: /metadata/name
      value: postgresql-conf
    - op: replace
      path: /data
      value:
        postgresql.conf: |
          listen_addresses                = '*'
          port                            = 5432
          max_connections                 = 250
          superuser_reserved_connections  = 3
          log_lock_waits                  = on
          log_temp_files                  = 0
          log_checkpoints                 = on
          log_connections                 = off
          log_destination                 = 'stderr'
          log_error_verbosity             = 'DEFAULT'
          log_min_messages                = 'WARNING'
          log_hostname                    = off
          log_timezone                    = 'Asia/Aqtau'
          log_line_prefix                 = '%t [%p-%l] %r %q%u@%d '
          datestyle                       = 'iso, mdy'
          timezone                        = 'Asia/Aqtau'
  persistentvolumeclaim/postgresql:
    - op: replace
      path: /spec
      value:
        storageClassName: standard
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 32Gi
  configmap/postgresql-init-script:
    - op: replace
      path: /metadata/name
      value: postgresql-init-script
    - op: replace
      path: /data
      value:
        initdb.sh: |
          #!/bin/bash
          set -euo pipefail

          export POSTGRESQL_SERVICE_DBNAME=keycloak_base
          export POSTGRESQL_SERVICE_USERNAME=keycloak_service
          export POSTGRESQL_SERVICE_PASSWORD=keycloak_service

          # https://hub.docker.com/_/postgres
          # Initialization scripts

          echo ">>> Creating user ${POSTGRESQL_SERVICE_USERNAME}"
          psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" <<-EOSQL
              CREATE ROLE ${POSTGRESQL_SERVICE_USERNAME} WITH NOSUPERUSER LOGIN PASSWORD '${POSTGRESQL_SERVICE_PASSWORD}';
              CREATE DATABASE ${POSTGRESQL_SERVICE_DBNAME} lc_collate 'en_US.UTF-8' lc_ctype 'en_US.UTF-8' encoding 'UTF8' template 'template0';
              ALTER DATABASE ${POSTGRESQL_SERVICE_DBNAME} OWNER TO ${POSTGRESQL_SERVICE_USERNAME};
          EOSQL

keycloak:
  secret/keycloak:
    - op: replace
      path: /stringData
      value:
        KC_BOOTSTRAP_ADMIN_USERNAME: "${KC_ADMIN_USER}"
        KC_BOOTSTRAP_ADMIN_PASSWORD: "${KC_ADMIN_PASS}"
        KC_DB_USERNAME: "${DB_USER}"
        KC_DB_PASSWORD: "${DB_PASSWORD}"
        KC_DB_URL: "jdbc:postgresql://postgresql:5432/keycloak_base"
  statefulset/keycloak:
    - op: add
      path: /spec/template/spec/containers/0/env
      value:
        - name: TZ
          value: Asia/Aqtau
  service/keycloak:
    - op: add
      path: /spec/ports/0/nodePort
      value: 30268
  configmap/keycloak:
    - op: replace
      path: /data
      value:
        TZ: "Asia/Aqtau"
        KC_PROXY: "edge"
        KC_DB: "postgres"
        KC_DB_SCHEMA: "public"
        KC_HTTP_ENABLED: "true"
        KC_HOSTNAME_STRICT: "false"
        KC_HOSTNAME_STRICT_HTTPS: "false"
        KC_CACHE: "local"
